<template>
  <view>
  <scroll-view
    style="height: {{height}}px"
    scroll-y="true"
    bindscroll="handleScroll">
    <base-header></base-header>
    <view class="wrapper" id="wrapper">
      <view class="inner" style="{{currentStyle}}">
        <view class="container" catchtouchmove="stopEvent">
          <base-tab bindselect="handleSelect"></base-tab>
          <view wx:if="{{hasMenu}}" class="menu" style="height: {{height-50}}px">
            <scroll-view scroll-y="true" style="height: 100%">
              <base-menu activeIndex="{{activeIndex}}"></base-menu>
              <view class="empty"></view>
            </scroll-view>
          </view>
          <view wx:if="{{hasMenu}}" class="title">{{getTitle}}</view>
        </view>
      </view>
    </view>
    <view id="food" style="min-height: {{height-50}}px;">
      <component is="{{current}}" bindsize="handleSize"></component>
      <view class="empty"></view>
    </view>
    <!-- 必须在scroll-view里面定位，因为触摸滚动的时候会卡顿 -->
    <view class="bottom">
      <base-bottom></base-bottom>
    </view>
  </scroll-view>
  <!-- 弹窗逻辑都写在最外层 -->
  <view>

  </view>
  </view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import dll from '../lib/dll'
  import Store from '../store/index'
  console.log(dll)
  let top = 0
  let flag = false
  let foodHeight = 0
  let nodeList = []

  createPage({
    data: {
      height: 0,
      currentStyle: '',
      current: 'base-food',
      hasMenu: true,
      color: '',
      title: '折扣',
      activeIndex: 0
    },
    computed: {
      ...Store.mapGetters(['foodList']),
      getTitle () {
        return this.foodList[this.activeIndex] && this.foodList[this.activeIndex].categoryName
      }
    },
    methods: {
      ...Store.mapActions(['updateShopList']),
    },
    onLoad () {
      wx.getSystemInfo({
        success: (res) => {
          this.height = res.windowHeight
        }
      })
      // 初始化店铺的数据
      this.updateShopList()
      this.$nextTick(() => {
        const query = wx.createSelectorQuery()
        query.select('#wrapper').boundingClientRect((res) => {
          top = res.top
        }).exec()
        query.select('#food').boundingClientRect((res) => {
          foodHeight = res.height
        }).exec()
      })
    },
    formatData () {
      
    },
    handleScroll (e) {
      let scrollTop = e.detail.scrollTop
      for (let i = 0; i < nodeList.length; i++) {
        const element = nodeList[i]
        const nextEle = nodeList[i+1]
        if (scrollTop > element.top && (!nextEle || nextEle.top > scrollTop)) {
          if (this.activeIndex !== i) {
            this.activeIndex = i
          }
          break
        }
      }
      if (foodHeight <= this.height ) {
        return
      }
      if (scrollTop > top && !flag) {
        flag = true
        this.currentStyle = 'position: fixed;'
        console.log('吸顶')
      }
      if (scrollTop < top && flag) {
        flag = false
        this.currentStyle = ''
        console.log('恢复')
      }
    },
    stopEvent () {
      // 阻止冒泡，防止滚动菜单的时候滚动菜品
    },
    handleSelect (e) {
      // 动态组件切换
      const map = ['base-food', 'base-evaluate', 'base-business']
      const index = e.detail.index
      this.current = map[index]
      if (this.current === 'base-food') {
        this.hasMenu = true
        this.color = ''
      } else {
        this.hasMenu = false
        this.color = '#f5f5f5'
      }
    },
    handleSize (e) {
      nodeList = e.detail.nodeList
    }
  })
</script>

<style lang="stylus">
  //隐藏滚动条
  ::-webkit-scrollbar
    width 0
    height 0
    color transparent
    display none

  .header
    height 200px
    width 100%
    background pink
  .content
    width 100%
    overflow-y scroll
  .item
    height 200px
    width 100%
    border 1px solid red
  .wrapper
    height 50px
    position relative
  .inner
    height 50px
    width 100%
    position absolute
    left 0
    top 0
    z-index 10
  .container
    width 100%
    height 100%
    position relative
  .tab
    width 100%
    height 100%
  .menu
    width 80px
    height 0
    position absolute
    left 0
    top 51px
    z-index 99
    background #f5f5f5
  .bottom
    position fixed
    left 0
    bottom 0
    height 50px
    width 100%
    z-index 100
  .empty
    height 50px
    width 100%
  .title
    margin-left 80px
    padding-left 10px
    line-height 36px
    background #fff
    font-size 12px
    color #333
    position absolute
    width 100%
</style>

<script type="application/json">
  {
    "usingComponents": {
      "base-header": "../components/base-header.mpx",
      "base-tab": "../components/base-tab.mpx",
      "base-menu": "../components/base-menu.mpx",
      "base-food": "../components/base-food.mpx",
      "base-bottom": "../components/base-bottom.mpx",
      "base-business": "../components/base-business.mpx",
      "base-evaluate": "../components/base-evaluate.mpx",
    }
  }
</script>
